<?xml version="1.0" encoding="UTF-8"?>
<!-- Build file to convert DITA files to scorm.
  
     Provided by the DITA Learning and Training Subcommittee of
     the DITA Technical Committee.
     
     Materials copyright (c) 2009 OASIS Open
     
     These materials may be used for any purpose without restriction.

-->


<project name="dita2scorm" default="dita2scorm">

  <!-- test to see where the plugin is located, plugins or demo: -->
  <dirname property="scorm.dir" file="${ant.file.dita2scorm}"/>
	
	<property name="scorm.static.resources.dir" 
	location="${scorm.dir}/scormStaticResources"/>

  <target name="dita2scorm"
          unless="noMap"
          depends="build-init, preprocess, copy-css, dita.topics.xhtml, 
          dita.inner.topics.xhtml, dita.outer.topics.xhtml,dita.map.scorm, scorm.zip.package">
  </target>


  <target name="dita.map.scorm"
    depends="dita.map.scorm.init, dita.map.scorm.manifest" />
  
  <target name="dita.map.scorm.init"
    description="Init properties for scorm">
    <basename property="dita.map.toc.root" file="${dita.input.filename}"
      suffix=".ditamap" />
    <condition property="content.link.ext" value=".html">
      <equals arg1="${dita.ext}" arg2=".dita"></equals>
    </condition>
    <condition property="content.link.ext" value=".html">
      <equals arg1="${dita.ext}" arg2=".xml"></equals>
    </condition>
  </target>
  
  <target name="dita.map.scorm.manifest"
    depends="dita.map.scorm.init"
    description="Build SCORM Manifest file">
    <xslt processor="trax" basedir="${dita.temp.dir}"
      destdir="${output.dir}" includes="${user.input.file}"
      style="${scorm.dir}${file.separator}xsl${file.separator}map2scorm_xslt2.xsl">
      <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
      <param name="OUTEXT" expression="${content.link.ext}" />
      <mapper type="glob" from="*${dita.input.filename}"
        to="imsmanifest.xml" />
    </xslt>
  	<!--
  	      style="${scorm.dir}${file.separator}xsl${file.separator}map2scorm_xslt2.xsl">
  	-->
  </target>
  
  <target name="dita.map.scorm.temp4a"
    depends="dita.map.scormtemp4a.init, dita.map.scormtemp4a.manifest" />
  
  <target name="dita.map.scormtemp4a.init"
    description="Init properties for scormtemp4a">
    <basename property="dita.map.toc.root" file="${dita.input.filename}"
      suffix=".ditamap" />
    <condition property="content.link.ext" value=".html">
      <equals arg1="${dita.ext}" arg2=".dita"></equals>
    </condition>
    <condition property="content.link.ext" value=".html">
      <equals arg1="${dita.ext}" arg2=".xml"></equals>
    </condition>
  </target>
  
  <target name="dita.map.scormtemp4a.manifest"
    depends="dita.map.scormtemp4a.init"
    description="Build SCORM Manifest file - Template 4a">
    <xslt processor="trax" basedir="${dita.temp.dir}"
      destdir="${output.dir}" includes="${user.input.file}"
      style="${scorm.dir}${file.separator}xsl${file.separator}map2scorm_temp4a.xsl">
      <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
      <param name="OUTEXT" expression="${content.link.ext}" />
      <mapper type="glob" from="*${dita.input.filename}"
        to="imsmanifest_4a.xml" />
    </xslt>
  </target>
  
  <target name="dita.map.scorm.temp6"
    depends="dita.map.scormtemp6.init, dita.map.scormtemp6.manifest" />
  
  <target name="dita.map.scormtemp6.init"
    description="Init properties for scormtemp6">
    <basename property="dita.map.toc.root" file="${dita.input.filename}"
      suffix=".ditamap" />
    <condition property="content.link.ext" value=".html">
      <equals arg1="${dita.ext}" arg2=".dita"></equals>
    </condition>
    <condition property="content.link.ext" value=".html">
      <equals arg1="${dita.ext}" arg2=".xml"></equals>
    </condition>
  </target>
  
  <target name="dita.map.scormtemp6.manifest"
    depends="dita.map.scormtemp6.init"
    description="Build SCORM Manifest file - Template 6">
    <xslt processor="trax" basedir="${dita.temp.dir}"
      destdir="${output.dir}" includes="${user.input.file}"
      style="${scorm.dir}${file.separator}xsl${file.separator}map2scorm_temp6.xsl">
      <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
      <param name="OUTEXT" expression="${content.link.ext}" />
      <mapper type="glob" from="*${dita.input.filename}"
        to="imsmanifest_6.xml" />
    </xslt>
  </target>


  <target name="dita.map.scorm.objmap"
    depends="dita.map.scorm.init2, dita.map.scormtemp6.objmap" />
  
  <target name="dita.map.scorm.init2"
    description="Init properties for scorm">
    <basename property="dita.map.toc.root" file="${dita.input.filename}"
      suffix=".ditamap" />
    <condition property="content.link.ext" value=".html">
      <equals arg1="${dita.ext}" arg2=".dita"></equals>
    </condition>
    <condition property="content.link.ext" value=".html">
      <equals arg1="${dita.ext}" arg2=".xml"></equals>
    </condition>
  </target>
  
  <target name="dita.map.scormtemp6.objmap"
    depends="dita.map.scorm.init2"
    description="Build SCORM Objectives map">
    <xslt processor="trax" basedir="${dita.temp.dir}"
      destdir="${output.dir}" includes="${user.input.file}"
      style="${scorm.dir}${file.separator}xsl${file.separator}map2scorm_temp6_obj.xsl">
      <param name="OUTPUTDIR" expression="${output.dir}" />
      <param name="DITAEXT" expression="${dita.ext}" if="dita.ext" />
      <param name="OUTEXT" expression="${content.link.ext}" />
      <mapper type="glob" from="*${dita.input.filename}"
        to="objmap.xml" />
    </xslt>
  </target>
  
  <target name="dita.inner.topics.lcxhtml" unless="noTopic" if="inner.transform" description="Build XHTML output from inner dita topics">
    <condition property="out.ext" value=".html">
      <not>
        <isset property="out.ext"></isset>
      </not>
    </condition>
    <condition property="args.xsl" value="${dita.script.dir}${file.separator}dita2xhtml.xsl">
      <not>
        <isset property="args.xsl"></isset>
      </not>
    </condition>
    <xslt processor="trax" basedir="${dita.temp.dir}" destdir="${output.dir}" includes="${fullditatopiclist} ${chunkedtopiclist}" extension="${out.ext}" style="${args.xsl}">
      <param name="RELTHING" expression="${tempdirToinputmapdir.relative.value}"/>
      <param name="BASEDIR" expression="${dita.temp.dir}"/>
      <param name="OUTDIR" expression="${output.dir}"></param>
      <param name="DITAEXT" expression="${dita.ext}" if="dita.ext"></param>
      <param name="FILTERFILE" expression="${dita.input.valfile}" if="dita.input.valfile"></param>
      <param name="CSS" expression="${args.css.file}" if="args.css.file"></param>
      <param name="CSSPATH" expression="${user.csspath}" if="user.csspath"></param>
      <param name="HDF" expression="${args.hdf}" if="args.hdf"></param>
      <param name="HDR" expression="${args.hdr}" if="args.hdr"></param>
      <param name="FTR" expression="${args.ftr}" if="args.ftr"></param>
      <param name="DRAFT" expression="${args.draft}" if="args.draft"></param>
      <param name="ARTLBL" expression="${args.artlbl}" if="args.artlbl"></param>
      <param name="INDEXSHOW" expression="${args.indexshow}" if="args.indexshow"></param>
      <param name="OUTEXT" expression="${out.ext}" if="out.ext"></param>
      
      
      <mapper type="regexp" from="^(${tempdirToinputmapdir.relative.value})(.*?)(\.(xml|dita))$$" to="\2${out.ext}"></mapper>
    </xslt>
  </target>
	
  <target name="scorm.zip.package" description="Create working SCORM Zip package from generated materials and static components"
      >
      <property name="scorm.package.name" value="${dita.input.filename}.zip"/>
      <copy todir="${output.dir}">
        <fileset dir="${scorm.static.resources.dir}">
          <include name="**/*"/>
        	<exclude name="readme.txt"/>
        </fileset>
      </copy>
      <zip destfile="${output.dir}/${scorm.package.name}">
      	<fileset dir="${output.dir}">
      		<include name="**/*"/>
      	</fileset>
      </zip>
    </target>
    

  
</project>
