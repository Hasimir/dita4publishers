<project name="DITA For Publishers" basedir=".">

  <property file="build.properties"/>
  <property file="${user.home}/.build.properties"/>
	<property file="${user.home}/build.properties"/>

	
  <property name="dist" location="${basedir}/dist"/>
  <property name="lib" location="${basedir}/java/lib"/>
  <property name="src" location="${basedir}/src/java"/>
  <property name="build" location="${basedir}/build"/>
  <property name="temp" location="${basedir}/temp"/>
  <property name="epubTemp" location="${temp}/epub"/>
  <property name="epubBuild" location="${build}/epubs"/>
  <property name="docs" location="${basedir}/documentation"/>
  <property name="website.source" location="${docs}/website"/>
  <property name="website.build" location="${build}/website"/>
	<property name="sampledata" location="${basedir}/sample_data"/>
	<property name="plugin.dist" location="${dist}/plugins"/>
  <property name="package.dist" location="${dist}/dita4publishers"/>
	<property name="package.zip.base" value="dita4publishers"/>
  <property name="dita-ot-dir" location="c:\DITA-OT1.5"/>
  <property name="plugin-src" value="${basedir}/toolkit_plugins"/>
	<property name="shakespear-sample" value="${basedir}/sample_data/specializations/shakespear"/>
  <property name="plugin-shakespear-samples-src" value="${shakespear-sample}/toolkit_plugins"/>
  <property name="plugin-deploy_target" value="${dita-ot-dir}/plugins"/>
  <property name="doctypes.plugin-dist" value="${plugin.dist}/net.sourceforge.dita4publishers.doctypes"/>
  <property name="doctypes.plugin-shakespear-dist" value="${plugin.dist}/net.sourceforge.dita4publishers.shakespear.doctypes"/>
  <property name="doctypes.src" value="${basedir}/doctypes"/>
  <property name="doctypes-skakespear-samples.src" value="${shakespear-sample}/doctypes"/>
  <property name="xslt.src" value="${basedir}/xslt"/>

	<import file="${dita-ot-dir}${file.separator}integrator.xml" optional="yes"/>
  

  <property name="lib.home" value="${lib}" />
  <property name="src.home" value="${basedir}/src" />
  <property name="src.java.home" value="${src.home}/java" />

  <property name="resources.home" value="${src.home}/resources" />

	<path id="dita-classpath"
		>
		<fileset dir="${dita-ot-dir}/lib">
		  <include name="**/*.jar"/>
		</fileset>
	</path>
	

	
	<target name="init">
    <tstamp/>
  </target>

  <tstamp>
		<format property="package.date" pattern="yyyy-MM-dd"/>
	</tstamp>
  

  <target name="clean">
  </target>
	
	
	<target name="dist-toolkit-plugins" description="Packages the DITA Open Toolkit plugins for deployment to a working Toolkit instance"
		 depends="dist-init"
		>
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${plugin.dist}"  includes="net.sourceforge.dita4publishers.*/**"/>
    </delete>
		<copy todir="${plugin.dist}">
			<fileset dir="${plugin-src}">
			</fileset>
		</copy>
    <copy todir="${plugin.dist}">
      <fileset dir="${plugin-shakespear-samples-src}">
      </fileset>
    </copy>
    <copy todir="${doctypes.plugin-dist}/doctypes">
      <fileset dir="${doctypes.src}">
        <exclude name="xmlDomain/**"/>
      </fileset>
    </copy>
    <copy todir="${doctypes.plugin-shakespear-dist}/doctypes">
      <fileset dir="${doctypes-skakespear-samples.src}">
      </fileset>
    </copy>
    <copy todir="${doctypes.plugin-dist}/doctypes">
      <fileset dir="${doctypes.src}">
        <exclude name="xmlDomain/**"/>
      </fileset>
    </copy>
    <copy todir="${plugin.dist}/net.sourceforge.dita4publishers.xmldomain.doctypes">
      <fileset dir="${doctypes.src}/xmldomain">
        <include name="*/**"/>
      </fileset>
    </copy>
  </target>
	
	<target name="deploy-toolkit-plugins" depends="dist-toolkit-plugins"
	  description="Deploy plugins to local DITA Open Toolkit">
		<delete failonerror="true" includeemptydirs="true">
			<fileset dir="${plugin-deploy_target}" includes="net.sourceforge.dita4publishers.*/**"/>
		</delete>
		<copy todir="${plugin-deploy_target}">
			<fileset dir="${plugin.dist}">
				<include name="**/*"/>
        <exclude name="**/CVS"/>
			</fileset>
		</copy>
    <!-- Itegrate the deployed plugins: -->
    <antcall target="integrate"/>

	</target>
	
	<target name="dist-init">
		<delete failonerror="true" includeemptydirs="true">
			<fileset dir="${dist}" includes="*/**"/>
  	</delete>
		<mkdir dir="${dist}"/>
		<mkdir dir="${package.dist}"/>
  </target>
	
	<target name="dist-epub-plugin">
    <delete failonerror="true" includeemptydirs="true">
      <fileset dir="${plugin.dist}" includes="net.sourceforge.dita4publishers.epub/**"/>
    </delete>
    <copy todir="${plugin.dist}/net.sourceforge.dita4publishers.epub">
      <fileset dir="${plugin-src}/net.sourceforge.dita4publishers.epub">
        <include name="**/*"/>
      </fileset>
    </copy>
	</target>
	
	<target name="package-epub-plugin" depends="dist-epub-plugin">
    <zip destfile="${dist}/dita4publishers_epub_plugin-${package.date}.zip">
      <fileset dir="${plugin.dist}">
        <include name="net.sourceforge.dita4publishers.epub/**"/>
      </fileset>
    </zip>		
	</target>
	
	<target name="package-toolkit-plugins" depends="dist-init, dist-toolkit-plugins"
		description="Create distributable Zip packages of the different Toolkit plugins"
		>
    <zip destfile="${package.dist}/dita4publishers_toolkit_plugins.zip">
      <fileset dir="${plugin.dist}">
        <include name="net.sourceforge.dita4publishers.*/**"/>
      </fileset>
    </zip>
  </target>
	
	<target name="package-delivery" depends="dist-init, package-toolkit-plugins, package-epub-plugin"
		description="Create distributable package of all the deliverables"
		>
    <copy todir="${package.dist}/xslt">
      <fileset dir="${xslt.src}">
        <include name="*/**"/>
      </fileset>
    </copy>
    <copy todir="${package.dist}/sample_data">
      <fileset dir="${sampledata}">
        <include name="*/**"/>
      </fileset>
    </copy>
    <copy todir="${package.dist}/documentation">
      <fileset dir="${docs}">
        <include name="*/**"/>
      </fileset>
    </copy>
		
    <copy todir="${package.dist}/epubs">
      <fileset dir="${epubBuild}">
        <include name="**/*.epub"/>
      </fileset>
    </copy>
    
		<zip destfile="${dist}/${package.zip.base}-${package.date}.zip">
			<fileset dir="${package.dist}" >
			</fileset>
		</zip>
	</target>
	
	<target name="upload-packages-to-sourceforge" depends="package-delivery, package-epub-plugin"
		description="Uploads the delivery packages to SourceForge in order to enable a new file release"
		>
		<scp todir="${sourceforge.username}@frs.sourceforge.net:uploads" password="${sourceforge.password}"
			verbose="true"
			>
			<fileset dir="${dist}/dita4publishers/epubs">
				<include name="**/*.epub"/>
			</fileset>
      <fileset dir="${dist}">
        <include name="*.zip"/>
      </fileset>
		</scp>
  </target>
	
	<target name="upload-website-contents-to-sourceforge">
		<!-- FIXME: Once can run Toolkit processes from this build file, need to
		     be dependent on separate target for generating the Web site HTML.
		  -->
		<scp todir="${sourceforge.username},dita4publishers@web.sourceforge.net:htdocs"
		 password="${sourceforge.password}"
			verbose="true"
			>
			<fileset dir="${website.source}/static-html">
				<include name="index.html"/>
			</fileset>
      <fileset dir="${website.build}">
        <include name="*"/>
      </fileset>
		</scp>
		<!-- NOTE: As far as I can tell, the target directory has to already exist -->
		<scp todir="${sourceforge.username},dita4publishers@web.sourceforge.net:htdocs/topics"
	     password="${sourceforge.password}"
	      verbose="true"
			>
      <fileset dir="${website.build}/topics"/>
		</scp>
	</target>
	
	<target name="generate-epubs-for-samples" depends="integrate, epub-wizard-of-oz"
	  description="Generate ePUB versions of the publications in sample_data"
	>
  </target>
	
	<target name="epub-wizard-of-oz" description="Generate epub for the Wizard of Oz">
		<antcall target="epub-map">
			<param name="mapname" value="wizard-of-oz"/>
		</antcall>
	</target>
	
	<target name="epub-map">
		<echo message="mapname='${mapname}'"/>
		<ant antfile="${dita-ot-dir}${file.separator}build.xml"
			dir="${dita-ot-dir}"
			target="dita2epub"
			
			>
			<property name="args.input" location="${sampledata}/${mapname}/${mapname}.ditamap"/>
      <property name="transtype" value="dita2epub"/>
			<property name="args.outext" value="html"/>
			<property name="args.xhtml.toc" value="index"/>
			<property name="dita.dir" location="${dita-ot-dir}"/>
			<property name="dita.temp.dir" location="${temp}/dita-temp"/>
			<property name="clean.temp" value="true"/><!-- Unset to preserve the temp directory -->
			<property name="output.dir" location="${epubTemp}"/>
	  </ant>
	</target>
	
</project>